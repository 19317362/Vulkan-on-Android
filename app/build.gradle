apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
def valLayerBinDir = "${ndkDir}/sources/third_party/vulkan/src/build-android/jniLibs"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jlwuwill.vulkan"
        minSdkVersion 25
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_shared"
                cppFlags "-std=c++11 -frtti -fexceptions"
                //abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                abiFilters "arm64-v8a", "x86_64"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs {
                // Must have ndk-r12 or better which including layer binaries
                srcDirs = ["${valLayerBinDir}"]
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
